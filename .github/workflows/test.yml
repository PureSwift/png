name: test

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    linux:
        runs-on: ubuntu-24.04
        name: Ubuntu 24.04

        steps:
            -   name: Install Swift
                uses: tayloraswift/swift-install-action@master
                with:
                    swift-prefix: "swift-5.10.1-release/ubuntu2404/swift-5.10.1-RELEASE"
                    swift-id: "swift-5.10.1-RELEASE-ubuntu24.04"

            -   name: Checkout repository
                uses: actions/checkout@v3

            -   run: .github/pipeline

    macos:
        runs-on: macos-14
        name: macOS
        strategy:
            matrix:
                swift:
                    -   toolchain:  5.10.1-RELEASE
                        branch:     swift-5.10.1-release

        env:
            SWIFT_TOOLCHAIN_DIRECTORY: >-
                /Library/Developer/Toolchains/swift-${{ matrix.swift.toolchain }}.xctoolchain

        steps:
            -   name: Cache Swift toolchain
                id:   cache
                uses: actions/cache@v2
                with:
                    path: ~/swift-${{ matrix.swift.toolchain }}.pkg
                    key: macos:swift:${{ matrix.swift.toolchain }}

            -   name: Download toolchain
                if: steps.cache.outputs.cache-hit != 'true'
                run:   "curl https://download.swift.org/\
                        ${{ matrix.swift.branch }}/xcode/\
                        swift-${{ matrix.swift.toolchain }}/\
                        swift-${{ matrix.swift.toolchain }}-osx.pkg \
                        --output ~/swift-${{ matrix.swift.toolchain }}.pkg"

            -   name: Install toolchain
                run: |
                    sudo installer -pkg ~/swift-${{ matrix.swift.toolchain }}.pkg -target /

            -   name: Select toolchain
                run: |
                    echo "TOOLCHAINS=$(plutil -extract CFBundleIdentifier raw \
                        $SWIFT_TOOLCHAIN_DIRECTORY/Info.plist)" >> $GITHUB_ENV

            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Run pipeline
                run: .github/pipeline

    devices:
        runs-on: macos-14
        name: macOS
        strategy:
            matrix:
                device: [ios, tvos, watchos]
        env:
            DEVELOPER_DIR: "/Applications/Xcode_15.3.app/Contents/Developer"

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Build
                run: |
                    swift --version
                    xcrun xcodebuild -list
                    xcrun xcodebuild build \
                        -scheme "PNG" \
                        -destination "generic/platform=${{ matrix.device }}"
